<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="GitHubLinkButton" TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:ThemedDialogColors.HyperlinkBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vs:ThemedDialogColors.HyperlinkBrushKey}}" />
        <Setter Property="FontFamily" Value="{DynamicResource GitHubFontFamilyNormal}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NegativeMarginFocusVisual}" />
        <Setter Property="ToolTipService.ShowDuration" Value="30000" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="Transparent" Margin="{TemplateBinding Margin}">
                        <ContentPresenter 
                            x:Name="Text" 
                            Grid.Column="0" 
                            Margin="{TemplateBinding Padding}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:ThemedDialogColors.HyperlinkHoverBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:ThemedDialogColors.HyperlinkPressedBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>